# –ò–º–ø–æ—Ä—Ç—ã –±–∏–±–ª–∏–æ—Ç–µ–∫
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram import F
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import CallbackQuery

# –ò–º–ø–æ—Ä—Ç—ã –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤
from backdoor import main_start, get_doctor_answer

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="7559786010:AAHsA-nVQ8dVwv9BhC9iTpq1UeG-8j5N7gM")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —á–∞—Ç–∞, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
TARGET_CHAT_ID = -1002494968618

# –•—Ä–∞–Ω–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
user_messages = dict()


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏—ë–º",
        url="https://fomin-clinic.ru")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å",
        callback_data="question")
    )
    # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 4 –≤ —Ä—è–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏–ª–æ—Å—å 1 + 1
    builder.adjust(1)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ß—Ç–æ —Ç–µ–±—è –±–µ—Å–ø–æ–∫–æ–∏—Ç?",
        reply_markup=builder.as_markup()
    )

@dp.callback_query(F.data == "question")
async def handle_callback_button1(callback_query: CallbackQuery):
    await bot.send_message(callback_query.from_user.id, "_–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å_",
        parse_mode="MarkdownV2")

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message(F.text)
async def handle_text(message: types.Message):
    user_input = message.text
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑ —Ü–µ–ª–µ–≤–æ–≥–æ —á–∞—Ç–∞
    if message.chat.id != TARGET_CHAT_ID:
        sent_message = await bot.send_message(user_id, f"‚è≥ –Ø –Ω–∞—á–∏–Ω–∞—é –∏—Å–∫–∞—Ç—å –¥–ª—è —Ç–µ–±—è –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç")

        answer = main_start(user_id, user_input)
        #print(answer.index, answer.answer, answer.priority, answer.question)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if answer.answer == None:
            sent_message = await bot.send_message(user_id,
                                   f"üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à–ª–∞ —É —Å–µ–±—è –≤ –±–∞–∑–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞( \n–¢–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É, –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º")
            await bot.send_message(TARGET_CHAT_ID, f"{answer.index}: {user_id}: {user_input}")

        else:
            await bot.send_message(user_id, f"üó£Ô∏è–í–æ—Ç —Ç–µ–±–µ –º–æ–π —Å–æ–≤–µ—Ç:\n{answer.answer}")
            builder = InlineKeyboardBuilder()
            builder.add(types.InlineKeyboardButton(
                text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏—ë–º",
                url="https://fomin-clinic.ru")
            )

            if answer.doctor != None:
                await bot.send_message(user_id, f"‚úçÔ∏è –¢–∞–∫–∂–µ —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É: {answer.doctor}",
                    reply_markup=builder.as_markup()
                    )

            builder_recall = InlineKeyboardBuilder()
            builder_recall.add(types.InlineKeyboardButton(
                text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å",
                callback_data="question")
            )
            # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 4 –≤ —Ä—è–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏–ª–æ—Å—å 1 + 1
            builder_recall.adjust(1)
            await message.answer(
                "_–ú—ã –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–ª—å–Ω–µ–π—à–µ–µ –æ–±—â–µ–Ω–∏–µ, —Ç–∞–∫ —á—Ç–æ –ø–∏—à–∏—Ç–µ üòä_",
                parse_mode="MarkdownV2", reply_markup=builder_recall.as_markup()
            )


    if message.chat.id == TARGET_CHAT_ID and message.reply_to_message:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—Ç–∏–ª–∏, —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ—Ç –±–æ—Ç–∞
        if message.reply_to_message.from_user.id == bot.id:
            user_id, index = extract_user_id(message.reply_to_message.text)
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—Ç–∏–ª–∏
            await bot.delete_message(chat_id=TARGET_CHAT_ID, message_id=message.reply_to_message.message_id)
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ-–æ—Ç–≤–µ—Ç
            await bot.delete_message(chat_id=TARGET_CHAT_ID, message_id=message.message_id)
            if user_id != None:
                text, doctor, priority, status = doctor_answer_split(user_input)
                await bot.send_message(user_id, f"üë®üèª ‚Äç–û—Ç–≤–µ—Ç –≤—Ä–∞—á–∞:\n{text}")
                # await bot.send_message(user_id, f"{text}")
                builder = InlineKeyboardBuilder()
                builder.add(types.InlineKeyboardButton(
                    text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏—ë–º",
                    url="https://fomin-clinic.ru")
                )
                if doctor != None:
                    await bot.send_message(user_id, f"‚úçÔ∏è –¢–∞–∫–∂–µ —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É: {doctor}",
                                           reply_markup=builder.as_markup()
                                           )

                builder_recall = InlineKeyboardBuilder()
                builder_recall.add(types.InlineKeyboardButton(
                    text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å",
                    callback_data="question")
                )
                # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 4 –≤ —Ä—è–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏–ª–æ—Å—å 1 + 1
                builder_recall.adjust(1)
                await bot.send_message(user_id,
                    "_–ú—ã –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–ª—å–Ω–µ–π—à–µ–µ –æ–±—â–µ–Ω–∏–µ, —Ç–∞–∫ —á—Ç–æ –ø–∏—à–∏—Ç–µ üòä_", parse_mode="MarkdownV2",
                    reply_markup=builder_recall.as_markup()
                )



                # –ø—Ä–∏ —Å—Ç–∞—Ç—É—Å–µ –æ–¥–∏–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É, –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –æ–±—â–µ–Ω–∏–µ
                if status:
                    get_doctor_answer(index=index, answer=text, priority=priority, doctor=doctor)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞
def extract_user_id(text):
    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <id>"
    # –ù–∞–ø—Ä–∏–º–µ—Ä, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 12345: ..."
    parts = text.split(': ')
    if len(parts) > 1:
        return int(parts[1]), int(parts[0])
    return None, None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –≤—Ä–∞—á–∞
def doctor_answer_split(text):
    parts = text.split('Status: ')    # delete status
    status = int(parts[-1]) if len(parts) > 1 else 0
    
    parts = parts[0].split('Priority: ') # delete priority
    priority = int(parts[-1]) if len(parts) > 1 else 0

    parts = parts[0].split('Doctor: ')  # delete doctor
    doctor = parts[-1] if len(parts) > 1 else None
    answer = parts[0]
    return answer, doctor, priority, status

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
